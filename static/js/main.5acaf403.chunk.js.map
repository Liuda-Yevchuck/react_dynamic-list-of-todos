{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","filterByTitle","selectedStatus","todoId","selectUser","userId","setState","props","onSelect","handleFilterByTitle","event","target","value","handleFilterByStatus","setFilteredTodos","todos","filter","todo","title","includes","completed","this","filteredTodos","className","onChange","map","itemStatus","key","id","type","defaultChecked","cn","onClick","React","PureComponent","defaultProps","PropTypes","arrayOf","shape","request","url","fetch","then","response","json","responseJSON","data","catch","error","CurrentUser","user","loadData","prevProps","onDeselect","name","adress","phone","Component","App","selectedUserId","deselectUser","a","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5acaf403.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.PureComponent {\n  state = {\n    filterByTitle: '',\n    selectedStatus: 'all',\n    todoId: 0,\n  }\n\n  selectUser = (todoId, userId) => {\n    this.setState({ todoId });\n    this.props.onSelect(userId);\n  }\n\n  handleFilterByTitle = (event) => {\n    this.setState({\n      filterByTitle: event.target.value,\n    });\n  }\n\n  handleFilterByStatus = (event) => {\n    this.setState({\n      selectedStatus: event.target.value,\n    });\n  }\n\n  setFilteredTodos = todos => todos\n    .filter(todo => todo.title && todo.title.includes(this.state.filterByTitle))\n    .filter((todo) => {\n      switch (this.state.selectedStatus) {\n        case 'completed':\n          return todo.completed;\n        case 'active':\n          return !todo.completed;\n        default:\n          return true;\n      }\n    })\n\n  render() {\n    const { todos } = this.props;\n    const { todoId, selectedStatus, filterByTitle } = this.state;\n    const {\n      selectUser,\n      handleFilterByStatus,\n      handleFilterByTitle,\n      setFilteredTodos,\n    } = this;\n    const filteredTodos = setFilteredTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form>\n            <label>\n              Find a todo\n              <input\n                value={filterByTitle}\n                onChange={handleFilterByTitle}\n              />\n            </label>\n            <select\n              value={selectedStatus}\n              onChange={handleFilterByStatus}\n            >\n              <option value=\"all\">\n                All\n              </option>\n              <option value=\"completed\">\n                Completed\n              </option>\n              <option value=\"active\">\n                Active\n              </option>\n            </select>\n          </form>\n          <ul\n            className=\"TodoList__list\"\n          >\n            {filteredTodos.map((todo) => {\n              const itemStatus = todo.completed\n                ? 'TodoList__item TodoList__item--checked'\n                : 'TodoList__item TodoList__item--unchecked';\n\n              return (\n                <li\n                  key={todo.id}\n                  className={itemStatus}\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      defaultChecked={todo.completed}\n                    />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    type=\"button\"\n                    className={cn(\n                      'TodoList__user-button', 'button',\n                      { 'TodoList__user-button-selected': todoId === todo.id },\n                    )}\n                    onClick={() => selectUser(todo.id, todo.userId)}\n                  >\n                    {`User#${todo.userId}`}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ),\n  onSelect: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: null,\n      id: null,\n      title: null,\n      completed: false,\n    }),\n  ),\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(responseJSON => responseJSON.data)\n  .catch(error => `ERROR: ${error}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { request } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    const { userId } = this.props;\n\n    request(`/users/${userId}`)\n      .then(user => this.setState({ user }));\n  }\n\n  render() {\n    const { user } = this.state;\n    const { onDeselect } = this.props;\n\n    if (!user) {\n      return (\n        <h2>\n          Loading\n        </h2>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user.id}`}</span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.adress}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={onDeselect}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onDeselect: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await request('/todos');\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  deselectUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n    const { selectUser, deselectUser } = this;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onSelect={selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onDeselect={deselectUser}\n              />\n            ) : 'no user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}